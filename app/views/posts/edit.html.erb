<h3>SPOT MODIFICATION</h3>
<div class="row">
  
  <div class="col-6">
    <%= form_with(model: @post, local: true, class: "row g-3") do |f| %>
      <div class="col-12">
        <%= f.label :title, class: "form-label" %>
        <%= f.text_field :title, class: "form-control", id: "exampleFormControlInput1" %>
      </div>
      <div class="col-12">
        <p>Address</p>
        <%= f.text_field :street_address, :id =>"addressOutput",class: "form-control" %>
        <input type="button" value="ADDRESS ACQUISITION" class="form-label" onclick="getAddress();">
      </div>
      <div class="col-12">
        <%= f.label :image, class: "form-label" %>
        <%= f.file_field :image, class: "form-control form-control-sm" %>
      </div>
      <div class="col-12">
        <%= f.label :tag_list, class: "form-label" %>
        <%=f.text_field :tag_list, value: @post.tag_list.join(','), class: "form-control" %>
      </div>
      <div class="col-12">
        <%= f.label :detail, class: "form-label" %>
        <%= f.text_field :detail, class: "form-control", rows: 3 %>
      </div>
      <%= f.hidden_field :lat,:value =>"緯度", id: :lat %>
      <%= f.hidden_field :lng,:value =>"経度", id: :lng %>
      <div class="col-12">
        <%= f.submit "sumbmit post", class: "btn btn-outline-info btn-m" %>
      </div>
    <% end %>
      <div class="col-12">
        <%= link_to "HOME", posts_path, class:"btn btn-outline-info btn-m" %>
      </div>  
  </div>
  <div class="col-6">
    <div class = "gmap_modification">
    <h2>Map</h2>
    <input id="address" type="textbox" value="<%= @post.title %>">
    <input type="button" value="encode" onclick="codeAddress()">
    <p>You can adjust the position of the marker by dragging and dropping.<p>
    <div id='map'></div>
    <style>
    #map {
      height: 600px;
      width: 600px;
    }
    </style>

    <script>
      let map
      let marker
      function initMap(){
        geocoder = new google.maps.Geocoder()

        map = new google.maps.Map(document.getElementById('map'), {
        center:  {lat: <%= @post.lat %>, lng: <%= @post.lng %>},
        zoom: 15,
        });

        marker = new google.maps.Marker({
        position:  {lat: <%= @post.lat %>, lng: <%= @post.lng %>},
        map: map,
        draggable: true
        });

        google.maps.event.addListener( marker, 'dragend', function(ev){
          document.getElementById('lat').value = ev.latLng.lat();
          document.getElementById('lng').value = ev.latLng.lng();
        });
      }

      let geocoder
    let aft
    function codeAddress(){
      let inputAddress = document.getElementById('address').value;

      geocoder.geocode( { 'address': inputAddress}, function(results, status) {
        if (status == 'OK') {
            //マーカーが複数できないようにする
            if (aft == true){
                marker.setMap(null);
            }

            //新しくマーカーを作成する
            map.setCenter(results[0].geometry.location);
                marker = new google.maps.Marker({
                map: map,
                position: results[0].geometry.location,
                draggable: true // ドラッグ可能にする
            });

            //二度目以降か判断
            aft = true

            //検索した時に緯度経度を入力する
            document.getElementById('lat').value = results[0].geometry.location.lat();
            document.getElementById('lng').value = results[0].geometry.location.lng();

            // マーカーのドロップ（ドラッグ終了）時のイベント
            google.maps.event.addListener( marker, 'dragend', function(ev){
                // イベントの引数evの、プロパティ.latLngが緯度経度
                document.getElementById('lat').value = ev.latLng.lat();
                document.getElementById('lng').value = ev.latLng.lng();
            });
        } else {
          alert('該当する結果がありませんでした：' + status);
        }
      });   
    }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDjiwgPmWOBS1wgobOv5ILh-pdSKjYlMII&callback=initMap" async defer></script>

  </div>

 
  </div>
</div>

<div class = "latlng => adress">
  <script type="text/javascript">
  function getAddress(){
    // 参考　https://www.delta-ss.com/labo/a002-2.html
    var idoInput = document.getElementById('lat').value;
    var keidoInput = document.getElementById('lng').value;
    var latLngInput = new google.maps.LatLng(idoInput, keidoInput);
    //Google Maps APIのジオコーダを使います。
    var geocoder = new google.maps.Geocoder();
    
    //ジオコーダのgeocodeを実行します。
    //第１引数のリクエストパラメータにlatLngプロパティを設定します。
    //第２引数はコールバック関数です。取得結果を処理します。
    geocoder.geocode(
      {
        latLng: latLngInput
      },
      function(results, status) {
        
        var address = "";
        
        if (status == google.maps.GeocoderStatus.OK) {
        //取得が成功した場合
          
          //住所を取得します。
          address = results[0].formatted_address;
          
        } else if (status == google.maps.GeocoderStatus.ZERO_RESULTS) {
          alert("住所が見つかりませんでした。");
        } else if (status == google.maps.GeocoderStatus.ERROR) {
          alert("サーバ接続に失敗しました。");
        } else if (status == google.maps.GeocoderStatus.INVALID_REQUEST) {
          alert("リクエストが無効でした。");
        } else if (status == google.maps.GeocoderStatus.OVER_QUERY_LIMIT) {
          alert("リクエストの制限回数を超えました。");
        } else if (status == google.maps.GeocoderStatus.REQUEST_DENIED) {
          alert("サービスが使えない状態でした。");
        } else if (status == google.maps.GeocoderStatus.UNKNOWN_ERROR) {
          alert("原因不明のエラーが発生しました。");
        }
        
        //住所の結果表示をします。
        document.getElementById('addressOutput').value = address;
      });

  }
  </script> 
</div>




      